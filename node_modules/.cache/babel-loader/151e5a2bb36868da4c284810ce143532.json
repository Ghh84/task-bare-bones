{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gheri\\\\OneDrive\\\\Desktop\\\\Job related\\\\choicely\\\\task-bare-bones\\\\src\\\\components\\\\stops\\\\Stops.jsx\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchingData, fetchingFailed, fetchingSuccess, updatingData } from '../../actions';\nimport Table from './tableComponent/table';\n/** =====================================================================\n *  Feel free to change anything you wish as well as using\n *  Classes instead of Functional Components.\n *\n *  More info on README.md file\n *  Doubts? <vinicius@choicely.com>\n *  ======================================================================= */\n\nconst url = 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql';\nconst query = `{\n  stop(id: \"HSL:1020453\") {\n   name\n   stoptimesWithoutPatterns(numberOfDepartures: 8) {\n\tstop {\n\t\tgtfsId\n\t\tplatformCode\n\t}\n\t    serviceDay \n\t\trealtimeDeparture \n\t    scheduledArrival\n\t    scheduledDeparture\n\t    headsign\n             \n      } \n  }  \n\n}`;\nconst options = {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({\n    query\n  })\n};\n\nconst Stops = props => {\n  const {\n    stops,\n    fetchData,\n    fetchFailed,\n    fetchSuccess\n  } = props;\n  const {\n    data,\n    loading,\n    error,\n    columns\n  } = stops;\n  useEffect(() => {\n    fetchData();\n    setInterval(() => {\n      fetch(url, options).then(res => res.json()).then(data => fetchSuccess(data)).catch(e => fetchFailed(e.message));\n    }, 5000);\n  }, [fetchData, fetchFailed, fetchSuccess]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, error), loading && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, \"Loading ...\"), data && data.stoptimesWithoutPatterns && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, data.name, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, new Date(data.stoptimesWithoutPatterns[0].serviceDay * 1000).toLocaleDateString('en-US', {\n    weekday: 'short',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Stop Id:\", /*#__PURE__*/React.createElement(\"span\", {\n    id: \"span1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, '', data.stoptimesWithoutPatterns[0].stop.gtfsId)), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Platform:\", /*#__PURE__*/React.createElement(\"span\", {\n    id: \"span1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, data.stoptimesWithoutPatterns[0].stop.platformCode)))), /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    data: data.stoptimesWithoutPatterns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })));\n};\n\nStops.protoTypes = {\n  data: PropTypes.object,\n  fetchData: PropTypes.func,\n  fetchFailed: PropTypes.func,\n  fetchSuccess: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n  const {\n    stops\n  } = state;\n  return {\n    stops\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchData: () => {\n      dispatch(fetchingData());\n    },\n    fetchFailed: error => {\n      dispatch(fetchingFailed(error));\n    },\n    fetchSuccess: data => {\n      dispatch(fetchingSuccess(data));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stops);","map":{"version":3,"names":["React","useEffect","PropTypes","connect","fetchingData","fetchingFailed","fetchingSuccess","updatingData","Table","url","query","options","method","headers","body","JSON","stringify","Stops","props","stops","fetchData","fetchFailed","fetchSuccess","data","loading","error","columns","setInterval","fetch","then","res","json","catch","e","message","stoptimesWithoutPatterns","name","Date","serviceDay","toLocaleDateString","weekday","year","month","day","stop","gtfsId","platformCode","protoTypes","object","func","mapStateToProps","state","mapDispatchToProps","dispatch"],"sources":["C:/Users/gheri/OneDrive/Desktop/Job related/choicely/task-bare-bones/src/components/stops/Stops.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  fetchingData,\n  fetchingFailed,\n  fetchingSuccess,\n  updatingData,\n} from '../../actions'\nimport Table from './tableComponent/table'\n/** =====================================================================\n *  Feel free to change anything you wish as well as using\n *  Classes instead of Functional Components.\n *\n *  More info on README.md file\n *  Doubts? <vinicius@choicely.com>\n *  ======================================================================= */\nconst url = 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql'\nconst query = `{\n  stop(id: \"HSL:1020453\") {\n   name\n   stoptimesWithoutPatterns(numberOfDepartures: 8) {\n\tstop {\n\t\tgtfsId\n\t\tplatformCode\n\t}\n\t    serviceDay \n\t\trealtimeDeparture \n\t    scheduledArrival\n\t    scheduledDeparture\n\t    headsign\n             \n      } \n  }  \n\n}`\nconst options = {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    query,\n  }),\n}\nconst Stops = (props) => {\n  const { stops, fetchData, fetchFailed, fetchSuccess } = props\n  const { data, loading, error, columns } = stops\n\n  useEffect(() => {\n    fetchData()\n    setInterval(() => {\n      fetch(url, options)\n        .then((res) => res.json())\n        .then((data) => fetchSuccess(data))\n        .catch((e) => fetchFailed(e.message))\n    }, 5000)\n  }, [fetchData, fetchFailed, fetchSuccess])\n  return (\n    <div id=\"div\">\n      {error && <span>{error}</span>}\n      {loading && <span>Loading ...</span>}\n      {data && data.stoptimesWithoutPatterns && (\n        <div>\n          {data.name}\n          <div>\n            {new Date(\n              data.stoptimesWithoutPatterns[0].serviceDay * 1000,\n            ).toLocaleDateString('en-US', {\n              weekday: 'short',\n              year: 'numeric',\n              month: 'short',\n              day: 'numeric',\n            })}\n            <div>\n              <span>\n                Stop Id:\n                <span id=\"span1\">\n                  {''}\n                  {data.stoptimesWithoutPatterns[0].stop.gtfsId}\n                </span>\n              </span>\n              <span id=\"span\">\n                Platform:\n                <span id=\"span1\">\n                  {data.stoptimesWithoutPatterns[0].stop.platformCode}\n                </span>\n              </span>\n            </div>\n          </div>\n          <Table columns={columns} data={data.stoptimesWithoutPatterns} />\n        </div>\n      )}\n    </div>\n  )\n}\nStops.protoTypes = {\n  data: PropTypes.object,\n  fetchData: PropTypes.func,\n  fetchFailed: PropTypes.func,\n  fetchSuccess: PropTypes.func,\n}\nfunction mapStateToProps(state) {\n  const { stops } = state\n  return {\n    stops,\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchData: () => {\n      dispatch(fetchingData())\n    },\n    fetchFailed: (error) => {\n      dispatch(fetchingFailed(error))\n    },\n    fetchSuccess: (data) => {\n      dispatch(fetchingSuccess(data))\n    },\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Stops)\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,YAJF,QAKO,eALP;AAMA,OAAOC,KAAP,MAAkB,wBAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAG,GAAG,iEAAZ;AACA,MAAMC,KAAK,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAjBA;AAkBA,MAAMC,OAAO,GAAG;EACdC,MAAM,EAAE,MADM;EAEdC,OAAO,EAAE;IACP,gBAAgB;EADT,CAFK;EAKdC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;IACnBN;EADmB,CAAf;AALQ,CAAhB;;AASA,MAAMO,KAAK,GAAIC,KAAD,IAAW;EACvB,MAAM;IAAEC,KAAF;IAASC,SAAT;IAAoBC,WAApB;IAAiCC;EAAjC,IAAkDJ,KAAxD;EACA,MAAM;IAAEK,IAAF;IAAQC,OAAR;IAAiBC,KAAjB;IAAwBC;EAAxB,IAAoCP,KAA1C;EAEAlB,SAAS,CAAC,MAAM;IACdmB,SAAS;IACTO,WAAW,CAAC,MAAM;MAChBC,KAAK,CAACnB,GAAD,EAAME,OAAN,CAAL,CACGkB,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESN,IAAD,IAAUD,YAAY,CAACC,IAAD,CAF9B,EAGGS,KAHH,CAGUC,CAAD,IAAOZ,WAAW,CAACY,CAAC,CAACC,OAAH,CAH3B;IAID,CALU,EAKR,IALQ,CAAX;EAMD,CARQ,EAQN,CAACd,SAAD,EAAYC,WAAZ,EAAyBC,YAAzB,CARM,CAAT;EASA,oBACE;IAAK,EAAE,EAAC,KAAR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGG,KAAK,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAOA,KAAP,CADZ,EAEGD,OAAO,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAFd,EAGGD,IAAI,IAAIA,IAAI,CAACY,wBAAb,iBACC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGZ,IAAI,CAACa,IADR,eAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,IAAIC,IAAJ,CACCd,IAAI,CAACY,wBAAL,CAA8B,CAA9B,EAAiCG,UAAjC,GAA8C,IAD/C,EAECC,kBAFD,CAEoB,OAFpB,EAE6B;IAC5BC,OAAO,EAAE,OADmB;IAE5BC,IAAI,EAAE,SAFsB;IAG5BC,KAAK,EAAE,OAHqB;IAI5BC,GAAG,EAAE;EAJuB,CAF7B,CADH,eASE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4BAEE;IAAM,EAAE,EAAC,OAAT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,EADH,EAEGpB,IAAI,CAACY,wBAAL,CAA8B,CAA9B,EAAiCS,IAAjC,CAAsCC,MAFzC,CAFF,CADF,eAQE;IAAM,EAAE,EAAC,MAAT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6BAEE;IAAM,EAAE,EAAC,OAAT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGtB,IAAI,CAACY,wBAAL,CAA8B,CAA9B,EAAiCS,IAAjC,CAAsCE,YADzC,CAFF,CARF,CATF,CAFF,eA2BE,oBAAC,KAAD;IAAO,OAAO,EAAEpB,OAAhB;IAAyB,IAAI,EAAEH,IAAI,CAACY,wBAApC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EA3BF,CAJJ,CADF;AAqCD,CAlDD;;AAmDAlB,KAAK,CAAC8B,UAAN,GAAmB;EACjBxB,IAAI,EAAErB,SAAS,CAAC8C,MADC;EAEjB5B,SAAS,EAAElB,SAAS,CAAC+C,IAFJ;EAGjB5B,WAAW,EAAEnB,SAAS,CAAC+C,IAHN;EAIjB3B,YAAY,EAAEpB,SAAS,CAAC+C;AAJP,CAAnB;;AAMA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAC9B,MAAM;IAAEhC;EAAF,IAAYgC,KAAlB;EACA,OAAO;IACLhC;EADK,CAAP;AAGD;;AACD,SAASiC,kBAAT,CAA4BC,QAA5B,EAAsC;EACpC,OAAO;IACLjC,SAAS,EAAE,MAAM;MACfiC,QAAQ,CAACjD,YAAY,EAAb,CAAR;IACD,CAHI;IAILiB,WAAW,EAAGI,KAAD,IAAW;MACtB4B,QAAQ,CAAChD,cAAc,CAACoB,KAAD,CAAf,CAAR;IACD,CANI;IAOLH,YAAY,EAAGC,IAAD,IAAU;MACtB8B,QAAQ,CAAC/C,eAAe,CAACiB,IAAD,CAAhB,CAAR;IACD;EATI,CAAP;AAWD;;AACD,eAAepB,OAAO,CAAC+C,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnC,KAA7C,CAAf"},"metadata":{},"sourceType":"module"}