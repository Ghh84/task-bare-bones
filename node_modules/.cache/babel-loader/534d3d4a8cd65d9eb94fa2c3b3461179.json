{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gheri\\\\OneDrive\\\\Desktop\\\\Job related\\\\choicely\\\\task-bare-bones\\\\src\\\\components\\\\stops\\\\Stops.jsx\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchingData, fetchingFailed, fetchingSuccess } from '../../actions';\n/** =====================================================================\n *  Feel free to change anything you wish as well as using\n *  Classes instead of Functional Components.\n *\n *  More info on README.md file\n *  Doubts? <vinicius@choicely.com>\n *  ======================================================================= */\n\nconst url = 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql';\nconst query = `{\n  stop(id: \"HSL:1020453\") {\n   name\n   \tstoptimesWithoutPatterns {\n        serviceDay\n        scheduledArrival\n        headsign\n        trip {\n          route {\n            shortName\n            agency {\n              name\n            }\n          }\n          wheelchairAccessible\n          bikesAllowed\n        }\n        \n      } \n  }  \n}`;\nconst options = {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({\n    query\n  })\n};\n\nconst Stops = props => {\n  const {\n    stops,\n    fetchData,\n    fetchFailed,\n    fetchSuccess\n  } = props;\n  const {\n    data,\n    loading,\n    error\n  } = stops;\n  useEffect(() => {\n    fetchData();\n    fetch(url, options).then(res => res.json()).then(data => console.log(data)).catch(e => console.log(e.message));\n  }, [fetchData, fetchFailed, fetchSuccess]); // See the hints? :)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"lucky\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \"\\uD83D\\uDC4D\\uD83C\\uDF40\\uD83E\\uDD1E\"), \"Good Luck!\", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"lucky\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, \"\\uD83E\\uDD1E\\uD83C\\uDF40\\uD83D\\uDC4D\")), error && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }\n  }, error), loading && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }\n  }, \"Loading ...\"), data && data.stoptimesWithoutPatterns && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  }, data.name), data.stoptimesWithoutPatterns.map((stopInfo, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, stopInfo.headsign))));\n};\n\nStops.protoTypes = {\n  data: PropTypes.object,\n  fetchData: PropTypes.func,\n  fetchFailed: PropTypes.func,\n  fetchSuccess: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n  const {\n    stops\n  } = state;\n  return {\n    stops\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchData: () => {\n      dispatch(fetchingData());\n    },\n    fetchFailed: error => {\n      dispatch(fetchingFailed(error));\n    },\n    fetchSuccess: data => {\n      dispatch(fetchingSuccess(data));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stops);","map":{"version":3,"names":["React","useEffect","PropTypes","connect","fetchingData","fetchingFailed","fetchingSuccess","url","query","options","method","headers","body","JSON","stringify","Stops","props","stops","fetchData","fetchFailed","fetchSuccess","data","loading","error","fetch","then","res","json","console","log","catch","e","message","stoptimesWithoutPatterns","name","map","stopInfo","index","headsign","protoTypes","object","func","mapStateToProps","state","mapDispatchToProps","dispatch"],"sources":["C:/Users/gheri/OneDrive/Desktop/Job related/choicely/task-bare-bones/src/components/stops/Stops.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchingData, fetchingFailed, fetchingSuccess } from '../../actions';\n\n/** =====================================================================\n *  Feel free to change anything you wish as well as using\n *  Classes instead of Functional Components.\n *\n *  More info on README.md file\n *  Doubts? <vinicius@choicely.com>\n *  ======================================================================= */\nconst url = 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql';\nconst query = `{\n  stop(id: \"HSL:1020453\") {\n   name\n   \tstoptimesWithoutPatterns {\n        serviceDay\n        scheduledArrival\n        headsign\n        trip {\n          route {\n            shortName\n            agency {\n              name\n            }\n          }\n          wheelchairAccessible\n          bikesAllowed\n        }\n        \n      } \n  }  \n}`;\n\nconst options = {\n\tmethod: 'POST',\n\theaders: {\n\t\t'content-type': 'application/json',\n\t},\n\tbody: JSON.stringify({\n\t\tquery,\n\t}),\n};\n\nconst Stops = (props) => {\n\tconst { stops, fetchData, fetchFailed, fetchSuccess } = props;\n\tconst { data, loading, error } = stops;\n\n\tuseEffect(() => {\n\t\tfetchData();\n\t\tfetch(url, options)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => console.log(data))\n\t\t\t.catch((e) => console.log(e.message));\n\t}, [fetchData, fetchFailed, fetchSuccess]); // See the hints? :)\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>\n\t\t\t\t<span role=\"img\" aria-label=\"lucky\">\n\t\t\t\t\tüëçüçÄü§û\n\t\t\t\t</span>\n\t\t\t\tGood Luck!\n\t\t\t\t<span role=\"img\" aria-label=\"lucky\">\n\t\t\t\t\tü§ûüçÄüëç\n\t\t\t\t</span>\n\t\t\t</h2>\n\t\t\t{error && <span>{error}</span>}\n\t\t\t{loading && <span>Loading ...</span>}\n\t\t\t{data && data.stoptimesWithoutPatterns && (\n\t\t\t\t<div>\n\t\t\t\t\t<h3>{data.name}</h3>\n\t\t\t\t\t{data.stoptimesWithoutPatterns.map((stopInfo, index) => (\n\t\t\t\t\t\t<span key={index}>{stopInfo.headsign}</span>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nStops.protoTypes = {\n\tdata: PropTypes.object,\n\tfetchData: PropTypes.func,\n\tfetchFailed: PropTypes.func,\n\tfetchSuccess: PropTypes.func,\n};\n\nfunction mapStateToProps(state) {\n\tconst { stops } = state;\n\treturn {\n\t\tstops,\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tfetchData: () => {\n\t\t\tdispatch(fetchingData());\n\t\t},\n\t\tfetchFailed: (error) => {\n\t\t\tdispatch(fetchingFailed(error));\n\t\t},\n\t\tfetchSuccess: (data) => {\n\t\t\tdispatch(fetchingSuccess(data));\n\t\t},\n\t};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stops);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}