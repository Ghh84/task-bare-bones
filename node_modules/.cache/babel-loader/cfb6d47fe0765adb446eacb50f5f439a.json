{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gheri\\\\OneDrive\\\\Desktop\\\\Job related\\\\choicely\\\\task-bare-bones\\\\src\\\\components\\\\stops\\\\tableComponent\\\\tableBody.jsx\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\n\nclass TableBody extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderCell = (stopInfo, column) => {\n      if (column.path === 'serviceDay') {\n        alert(_.get(stopInfo, column.path));\n        var date = new Date(_.get(stopInfo, column.path) * 1000); // Hours part from the timestamp\n\n        var hours = date.getHours(); // Minutes part from the timestamp\n\n        var minutes = '0' + date.getMinutes(); // Seconds part from the timestamp\n\n        var seconds = '0' + date.getSeconds(); // Will display time in 10:30:23 format\n\n        var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n        return formattedTime;\n      }\n\n      if (column.path === 'scheduledArrival') {\n        const date = new Date(_.get(stopInfo, column.path));\n        var hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n        var minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n        var formattedTime = hours + ':' + minutes;\n        return formattedTime;\n      }\n\n      if (column.path === 'track') {\n        return _.get(stopInfo.trick, column.path);\n      }\n\n      return _.get(stopInfo, column.path);\n    };\n\n    this.createKey = (index, column) => {\n      return index + (column.path || column.key);\n    };\n  }\n\n  render() {\n    const {\n      data,\n      columns\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, data.map((stopInfo, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, columns.map(column => /*#__PURE__*/React.createElement(\"td\", {\n      key: this.createKey(index, column),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, this.renderCell(stopInfo, column))))));\n  }\n\n}\n\nexport default TableBody;","map":{"version":3,"names":["React","Component","_","TableBody","renderCell","stopInfo","column","path","alert","get","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","substr","trick","createKey","index","key","render","data","columns","props","map"],"sources":["C:/Users/gheri/OneDrive/Desktop/Job related/choicely/task-bare-bones/src/components/stops/tableComponent/tableBody.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport _ from 'lodash'\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (stopInfo, column) => {\r\n    if (column.path === 'serviceDay') {\r\n      alert(_.get(stopInfo, column.path))\r\n      var date = new Date(_.get(stopInfo, column.path) * 1000)\r\n      // Hours part from the timestamp\r\n      var hours = date.getHours()\r\n      // Minutes part from the timestamp\r\n      var minutes = '0' + date.getMinutes()\r\n      // Seconds part from the timestamp\r\n      var seconds = '0' + date.getSeconds()\r\n      // Will display time in 10:30:23 format\r\n      var formattedTime =\r\n        hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2)\r\n      return formattedTime\r\n    }\r\n    if (column.path === 'scheduledArrival') {\r\n      const date = new Date(_.get(stopInfo, column.path))\r\n      var hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours()\r\n      var minutes =\r\n        date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()\r\n      var formattedTime = hours + ':' + minutes\r\n      return formattedTime\r\n    }\r\n    if (column.path === 'track') {\r\n      return _.get(stopInfo.trick, column.path)\r\n    }\r\n\r\n    return _.get(stopInfo, column.path)\r\n  }\r\n\r\n  createKey = (index, column) => {\r\n    return index + (column.path || column.key)\r\n  }\r\n\r\n  render() {\r\n    const { data, columns } = this.props\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map((stopInfo, index) => (\r\n          <tr key={index}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(index, column)}>\r\n                {this.renderCell(stopInfo, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TableBody\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}