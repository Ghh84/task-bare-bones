{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gheri\\\\OneDrive\\\\Desktop\\\\Job related\\\\choicely\\\\task-bare-bones\\\\src\\\\components\\\\stops\\\\Stops.jsx\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchingData, fetchingFailed, fetchingSuccess } from '../../actions';\nimport Table from './tableComponent/table';\n/** =====================================================================\n *  Feel free to change anything you wish as well as using\n *  Classes instead of Functional Components.\n *\n *  More info on README.md file\n *  Doubts? <vinicius@choicely.com>\n *  ======================================================================= */\n\nconst url = 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql';\nconst query = `{\n  stop(id: \"HSL:1020453\") {\n   name\n   \tstoptimesWithoutPatterns {\n        serviceDay\n        scheduledArrival\n        headsign\n        trip {\n          route {\n            shortName\n            agency {\n              name\n            }\n          }\n          wheelchairAccessible\n          bikesAllowed\n        }\n        \n      } \n  }  \n}`;\nconst query1 = `{\n\tstation(id: \"HSL:1020453\") {\n\t  name\n\t  stoptimesWithoutPatterns(numberOfDepartures: 10) {\n\t\tstop {\n\t\t  platformCode\n\t\t}\n\t\tserviceDay\n\t\tscheduledArrival\n\t\tscheduledDeparture\n\t\ttrip {\n\t\t  route {\n\t\t\tshortName\n\t\t  }\n\t\t}\n\t\theadsign\n\t  }\n\t}\n  }`;\nconst options = {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({\n    query\n  })\n};\n\nconst Stops = props => {\n  const {\n    stops,\n    fetchData,\n    fetchFailed,\n    fetchSuccess\n  } = props;\n  const {\n    data,\n    loading,\n    error\n  } = stops;\n  console.log('data is', data);\n  const columns = [{\n    path: 'serviceDay',\n    label: 'Scheduled Arrival'\n  }, {\n    path: 'train',\n    label: 'Train'\n  }, {\n    path: 'headsign',\n    label: 'Destination'\n  }, {\n    path: 'track',\n    label: 'Track'\n  }];\n  useEffect(() => {\n    fetchData();\n    fetch(url, options).then(res => res.json()).then(data => fetchSuccess(data)).catch(e => fetchFailed(e.message));\n  }, [fetchData, fetchFailed, fetchSuccess]); // See the hints? :)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"lucky\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDC4D\\uD83C\\uDF40\\uD83E\\uDD1E\"), \"Good Luck!\", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"lucky\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"\\uD83E\\uDD1E\\uD83C\\uDF40\\uD83D\\uDC4D\")), error && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, error), loading && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, \"Loading ...\"), data && data.stoptimesWithoutPatterns && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Station: \", data.name), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Date:\", ' ', new Date(data.stoptimesWithoutPatterns[0].serviceDay).toDateString()), /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    data: data.stoptimesWithoutPatterns // sortColumn={sortColumn}\n    // onSort={onSort}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  })));\n};\n\nStops.protoTypes = {\n  data: PropTypes.object,\n  fetchData: PropTypes.func,\n  fetchFailed: PropTypes.func,\n  fetchSuccess: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n  const {\n    stops\n  } = state;\n  return {\n    stops\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchData: () => {\n      dispatch(fetchingData());\n    },\n    fetchFailed: error => {\n      dispatch(fetchingFailed(error));\n    },\n    fetchSuccess: data => {\n      dispatch(fetchingSuccess(data));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stops);","map":{"version":3,"names":["React","useEffect","PropTypes","connect","fetchingData","fetchingFailed","fetchingSuccess","Table","url","query","query1","options","method","headers","body","JSON","stringify","Stops","props","stops","fetchData","fetchFailed","fetchSuccess","data","loading","error","console","log","columns","path","label","fetch","then","res","json","catch","e","message","stoptimesWithoutPatterns","name","Date","serviceDay","toDateString","protoTypes","object","func","mapStateToProps","state","mapDispatchToProps","dispatch"],"sources":["C:/Users/gheri/OneDrive/Desktop/Job related/choicely/task-bare-bones/src/components/stops/Stops.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { connect } from 'react-redux'\nimport { fetchingData, fetchingFailed, fetchingSuccess } from '../../actions'\nimport Table from './tableComponent/table'\n/** =====================================================================\n *  Feel free to change anything you wish as well as using\n *  Classes instead of Functional Components.\n *\n *  More info on README.md file\n *  Doubts? <vinicius@choicely.com>\n *  ======================================================================= */\nconst url = 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql'\nconst query = `{\n  stop(id: \"HSL:1020453\") {\n   name\n   \tstoptimesWithoutPatterns {\n        serviceDay\n        scheduledArrival\n        headsign\n        trip {\n          route {\n            shortName\n            agency {\n              name\n            }\n          }\n          wheelchairAccessible\n          bikesAllowed\n        }\n        \n      } \n  }  \n}`\nconst query1 = `{\n\tstation(id: \"HSL:1020453\") {\n\t  name\n\t  stoptimesWithoutPatterns(numberOfDepartures: 10) {\n\t\tstop {\n\t\t  platformCode\n\t\t}\n\t\tserviceDay\n\t\tscheduledArrival\n\t\tscheduledDeparture\n\t\ttrip {\n\t\t  route {\n\t\t\tshortName\n\t\t  }\n\t\t}\n\t\theadsign\n\t  }\n\t}\n  }`\nconst options = {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    query,\n  }),\n}\n\nconst Stops = (props) => {\n  const { stops, fetchData, fetchFailed, fetchSuccess } = props\n  const { data, loading, error } = stops\n  console.log('data is', data)\n  const columns = [\n    { path: 'serviceDay', label: 'Scheduled Arrival' },\n    { path: 'train', label: 'Train' },\n    { path: 'headsign', label: 'Destination' },\n    { path: 'track', label: 'Track' },\n  ]\n\n  useEffect(() => {\n    fetchData()\n    fetch(url, options)\n      .then((res) => res.json())\n      .then((data) => fetchSuccess(data))\n      .catch((e) => fetchFailed(e.message))\n  }, [fetchData, fetchFailed, fetchSuccess]) // See the hints? :)\n\n  return (\n    <div>\n      <h2>\n        <span role=\"img\" aria-label=\"lucky\">\n          üëçüçÄü§û\n        </span>\n        Good Luck!\n        <span role=\"img\" aria-label=\"lucky\">\n          ü§ûüçÄüëç\n        </span>\n      </h2>\n      {error && <span>{error}</span>}\n      {loading && <span>Loading ...</span>}\n      {data && data.stoptimesWithoutPatterns && (\n        <div>\n          <h3>Station: {data.name}</h3>\n          <h3>\n            Date:{' '}\n            {new Date(\n              data.stoptimesWithoutPatterns[0].serviceDay,\n            ).toDateString()}\n          </h3>\n          <Table\n            columns={columns}\n            data={data.stoptimesWithoutPatterns}\n            // sortColumn={sortColumn}\n            // onSort={onSort}\n          />\n          <div>\n            {/* <span> Note:</span>\n            {data.stoptimesWithoutPatterns.map((stopInfo, index) => (\n              <span key={index}>{stopInfo.trip.bikesAllowed}</span>\n            ))} */}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nStops.protoTypes = {\n  data: PropTypes.object,\n  fetchData: PropTypes.func,\n  fetchFailed: PropTypes.func,\n  fetchSuccess: PropTypes.func,\n}\n\nfunction mapStateToProps(state) {\n  const { stops } = state\n  return {\n    stops,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchData: () => {\n      dispatch(fetchingData())\n    },\n    fetchFailed: (error) => {\n      dispatch(fetchingFailed(error))\n    },\n    fetchSuccess: (data) => {\n      dispatch(fetchingSuccess(data))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stops)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}