{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gheri\\\\OneDrive\\\\Desktop\\\\Job related\\\\choicely\\\\task-bare-bones\\\\src\\\\components\\\\stops\\\\tableComponent\\\\tableBody.jsx\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nclass TableBody extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderCell = (stopInfo, column) => {\n      // if (column.path === 'reaminTime') {\n      //   const departureDate = new Date(\n      //     _.get(stopInfo, 'scheduledDeparture') * 1000,\n      //   )\n      //     .toISOString()\n      //     .substr(11, 8)\n      //   return this.calWaitTime(departureDate)\n      // }\n      if (column.path === 'scheduledDeparture') {\n        return new Date(_.get(stopInfo, column.path) * 1000).toISOString().substr(11, 5);\n      }\n\n      if (column.path === 'platformCode') {\n        return _.get(stopInfo.stop, column.path);\n      }\n\n      if (column.path === 'code') {\n        return _.get(stopInfo.stop, 'gtfsId');\n      }\n\n      return _.get(stopInfo, column.path);\n    };\n\n    this.createKey = (index, column) => {\n      return index + (column.path || column.key);\n    };\n  }\n\n  render() {\n    const {\n      data,\n      columns\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      id: \"tableBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, data.map((stopInfo, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, columns.map(column => /*#__PURE__*/React.createElement(\"td\", {\n      key: this.createKey(index, column),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, this.renderCell(stopInfo, column))))));\n  }\n\n}\n\nexport default TableBody;","map":{"version":3,"names":["React","Component","_","moment","TableBody","renderCell","stopInfo","column","path","Date","get","toISOString","substr","stop","createKey","index","key","render","data","columns","props","map"],"sources":["C:/Users/gheri/OneDrive/Desktop/Job related/choicely/task-bare-bones/src/components/stops/tableComponent/tableBody.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport _ from 'lodash'\r\nimport moment from 'moment'\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (stopInfo, column) => {\r\n    // if (column.path === 'reaminTime') {\r\n    //   const departureDate = new Date(\r\n    //     _.get(stopInfo, 'scheduledDeparture') * 1000,\r\n    //   )\r\n    //     .toISOString()\r\n    //     .substr(11, 8)\r\n    //   return this.calWaitTime(departureDate)\r\n    // }\r\n    if (column.path === 'scheduledDeparture') {\r\n      return new Date(_.get(stopInfo, column.path) * 1000)\r\n        .toISOString()\r\n        .substr(11, 5)\r\n    }\r\n    if (column.path === 'platformCode') {\r\n      return _.get(stopInfo.stop, column.path)\r\n    }\r\n    if (column.path === 'code') {\r\n      return _.get(stopInfo.stop, 'gtfsId')\r\n    }\r\n\r\n    return _.get(stopInfo, column.path)\r\n  }\r\n  // calWaitTime = (departureDate) => {\r\n  //   var today = new Date()\r\n  //   var currentDate =\r\n  //     today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds()\r\n  //   console.log(currentDate, departureDate)\r\n  //   var startTime = moment(currentDate, 'HH:mm:ss')\r\n  //   var endTime = moment(departureDate, 'HH:mm:ss')\r\n  //   //var hrs = moment.utc(endTime.diff(startTime)).format('HH')\r\n  //   var min = moment.utc(endTime.diff(startTime)).format('mm')\r\n  //   var sec = moment.utc(endTime.diff(startTime)).format('ss')\r\n  //   return ['00', min, sec].join(':')\r\n  // }\r\n  createKey = (index, column) => {\r\n    return index + (column.path || column.key)\r\n  }\r\n\r\n  render() {\r\n    const { data, columns } = this.props\r\n    return (\r\n      <tbody id=\"tableBody\">\r\n        {data.map((stopInfo, index) => (\r\n          <tr key={index}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(index, column)}>\r\n                {this.renderCell(stopInfo, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TableBody\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;EAAA;IAAA;;IAAA,KAChCI,UADgC,GACnB,CAACC,QAAD,EAAWC,MAAX,KAAsB;MACjC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAIA,MAAM,CAACC,IAAP,KAAgB,oBAApB,EAA0C;QACxC,OAAO,IAAIC,IAAJ,CAASP,CAAC,CAACQ,GAAF,CAAMJ,QAAN,EAAgBC,MAAM,CAACC,IAAvB,IAA+B,IAAxC,EACJG,WADI,GAEJC,MAFI,CAEG,EAFH,EAEO,CAFP,CAAP;MAGD;;MACD,IAAIL,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;QAClC,OAAON,CAAC,CAACQ,GAAF,CAAMJ,QAAQ,CAACO,IAAf,EAAqBN,MAAM,CAACC,IAA5B,CAAP;MACD;;MACD,IAAID,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4B;QAC1B,OAAON,CAAC,CAACQ,GAAF,CAAMJ,QAAQ,CAACO,IAAf,EAAqB,QAArB,CAAP;MACD;;MAED,OAAOX,CAAC,CAACQ,GAAF,CAAMJ,QAAN,EAAgBC,MAAM,CAACC,IAAvB,CAAP;IACD,CAvB+B;;IAAA,KAoChCM,SApCgC,GAoCpB,CAACC,KAAD,EAAQR,MAAR,KAAmB;MAC7B,OAAOQ,KAAK,IAAIR,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACS,GAA1B,CAAZ;IACD,CAtC+B;EAAA;;EAwChCC,MAAM,GAAG;IACP,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAoB,KAAKC,KAA/B;IACA,oBACE;MAAO,EAAE,EAAC,WAAV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACGF,IAAI,CAACG,GAAL,CAAS,CAACf,QAAD,EAAWS,KAAX,kBACR;MAAI,GAAG,EAAEA,KAAT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACGI,OAAO,CAACE,GAAR,CAAad,MAAD,iBACX;MAAI,GAAG,EAAE,KAAKO,SAAL,CAAeC,KAAf,EAAsBR,MAAtB,CAAT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACG,KAAKF,UAAL,CAAgBC,QAAhB,EAA0BC,MAA1B,CADH,CADD,CADH,CADD,CADH,CADF;EAaD;;AAvD+B;;AA0DlC,eAAeH,SAAf"},"metadata":{},"sourceType":"module"}