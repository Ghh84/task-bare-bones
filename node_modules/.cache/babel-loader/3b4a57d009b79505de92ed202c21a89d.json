{"ast":null,"code":"import _ from 'lodash';\nimport moment from 'moment';\n\nconst calWaitTime = departureDate => {\n  var today = new Date();\n  var currentDate = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n  var startTime = moment(currentDate, 'HH:mm:ss');\n  var endTime = moment(departureDate, 'HH:mm:ss');\n  var min = moment.utc(endTime.diff(startTime)).format('mm');\n  return [min] + ' ' + 'min';\n};\n\nconst calDelyedTime = (realDeparture, sheduledDeparture) => {\n  const timeDiff = new Date(sheduledDeparture).getHours() * 60 + new Date(sheduledDeparture).getMinutes() - new Date(realDeparture).getHours() * 60 - new Date(realDeparture).getMinutes();\n  if (timeDiff === 0) return 'Ontime';\n  if (timeDiff[0] == '-') return timeDiff + ' min ' + 'Delayed';else return timeDiff + ' min ' + 'Earlier';\n};\n\nfunction renderCell(stopInfo, column) {\n  if (column.refId === 'time') {\n    return new Date(_.get(stopInfo, column.path) * 1000).toISOString().substr(11, 5);\n  }\n\n  if (column.refId === 'delay') {\n    const realDeparture = _.get(stopInfo, column.path[0]) * 1000;\n    const sheduledDeparture = _.get(stopInfo, column.path[1]) * 1000;\n    return calDelyedTime(realDeparture, sheduledDeparture);\n  }\n\n  if (column.refId === 'dueIn') {\n    const departureDate = new Date(_.get(stopInfo, column.path) * 1000).toISOString().substr(11, 8);\n    return calWaitTime(departureDate);\n  }\n\n  return _.get(stopInfo, column.path);\n}\n\nexport default renderCell;","map":{"version":3,"names":["_","moment","calWaitTime","departureDate","today","Date","currentDate","getHours","getMinutes","getSeconds","startTime","endTime","min","utc","diff","format","calDelyedTime","realDeparture","sheduledDeparture","timeDiff","renderCell","stopInfo","column","refId","get","path","toISOString","substr"],"sources":["C:/Users/gheri/OneDrive/Desktop/Job related/choicely/task-bare-bones/src/utilts/calUtils.jsx"],"sourcesContent":["import _ from 'lodash'\r\nimport moment from 'moment'\r\n\r\nconst calWaitTime = (departureDate) => {\r\n  var today = new Date()\r\n  var currentDate =\r\n    today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds()\r\n  var startTime = moment(currentDate, 'HH:mm:ss')\r\n  var endTime = moment(departureDate, 'HH:mm:ss')\r\n  var min = moment.utc(endTime.diff(startTime)).format('mm')\r\n  return [min] + ' ' + 'min'\r\n}\r\nconst calDelyedTime = (realDeparture, sheduledDeparture) => {\r\n  const timeDiff =\r\n    new Date(sheduledDeparture).getHours() * 60 +\r\n    new Date(sheduledDeparture).getMinutes() -\r\n    new Date(realDeparture).getHours() * 60 -\r\n    new Date(realDeparture).getMinutes()\r\n  if (timeDiff === 0) return 'Ontime'\r\n\r\n  if (timeDiff[0] == '-') return timeDiff + ' min ' + 'Delayed'\r\n  else return timeDiff + ' min ' + 'Earlier'\r\n}\r\nfunction renderCell(stopInfo, column) {\r\n  if (column.refId === 'time') {\r\n    return new Date(_.get(stopInfo, column.path) * 1000)\r\n      .toISOString()\r\n      .substr(11, 5)\r\n  }\r\n  if (column.refId === 'delay') {\r\n    const realDeparture = _.get(stopInfo, column.path[0]) * 1000\r\n    const sheduledDeparture = _.get(stopInfo, column.path[1]) * 1000\r\n    return calDelyedTime(realDeparture, sheduledDeparture)\r\n  }\r\n  if (column.refId === 'dueIn') {\r\n    const departureDate = new Date(_.get(stopInfo, column.path) * 1000)\r\n      .toISOString()\r\n      .substr(11, 8)\r\n    return calWaitTime(departureDate)\r\n  }\r\n  return _.get(stopInfo, column.path)\r\n}\r\n\r\nexport default renderCell\r\n"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,WAAW,GAAIC,aAAD,IAAmB;EACrC,IAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;EACA,IAAIC,WAAW,GACbF,KAAK,CAACG,QAAN,KAAmB,GAAnB,GAAyBH,KAAK,CAACI,UAAN,EAAzB,GAA8C,GAA9C,GAAoDJ,KAAK,CAACK,UAAN,EADtD;EAEA,IAAIC,SAAS,GAAGT,MAAM,CAACK,WAAD,EAAc,UAAd,CAAtB;EACA,IAAIK,OAAO,GAAGV,MAAM,CAACE,aAAD,EAAgB,UAAhB,CAApB;EACA,IAAIS,GAAG,GAAGX,MAAM,CAACY,GAAP,CAAWF,OAAO,CAACG,IAAR,CAAaJ,SAAb,CAAX,EAAoCK,MAApC,CAA2C,IAA3C,CAAV;EACA,OAAO,CAACH,GAAD,IAAQ,GAAR,GAAc,KAArB;AACD,CARD;;AASA,MAAMI,aAAa,GAAG,CAACC,aAAD,EAAgBC,iBAAhB,KAAsC;EAC1D,MAAMC,QAAQ,GACZ,IAAId,IAAJ,CAASa,iBAAT,EAA4BX,QAA5B,KAAyC,EAAzC,GACA,IAAIF,IAAJ,CAASa,iBAAT,EAA4BV,UAA5B,EADA,GAEA,IAAIH,IAAJ,CAASY,aAAT,EAAwBV,QAAxB,KAAqC,EAFrC,GAGA,IAAIF,IAAJ,CAASY,aAAT,EAAwBT,UAAxB,EAJF;EAKA,IAAIW,QAAQ,KAAK,CAAjB,EAAoB,OAAO,QAAP;EAEpB,IAAIA,QAAQ,CAAC,CAAD,CAAR,IAAe,GAAnB,EAAwB,OAAOA,QAAQ,GAAG,OAAX,GAAqB,SAA5B,CAAxB,KACK,OAAOA,QAAQ,GAAG,OAAX,GAAqB,SAA5B;AACN,CAVD;;AAWA,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,MAA9B,EAAsC;EACpC,IAAIA,MAAM,CAACC,KAAP,KAAiB,MAArB,EAA6B;IAC3B,OAAO,IAAIlB,IAAJ,CAASL,CAAC,CAACwB,GAAF,CAAMH,QAAN,EAAgBC,MAAM,CAACG,IAAvB,IAA+B,IAAxC,EACJC,WADI,GAEJC,MAFI,CAEG,EAFH,EAEO,CAFP,CAAP;EAGD;;EACD,IAAIL,MAAM,CAACC,KAAP,KAAiB,OAArB,EAA8B;IAC5B,MAAMN,aAAa,GAAGjB,CAAC,CAACwB,GAAF,CAAMH,QAAN,EAAgBC,MAAM,CAACG,IAAP,CAAY,CAAZ,CAAhB,IAAkC,IAAxD;IACA,MAAMP,iBAAiB,GAAGlB,CAAC,CAACwB,GAAF,CAAMH,QAAN,EAAgBC,MAAM,CAACG,IAAP,CAAY,CAAZ,CAAhB,IAAkC,IAA5D;IACA,OAAOT,aAAa,CAACC,aAAD,EAAgBC,iBAAhB,CAApB;EACD;;EACD,IAAII,MAAM,CAACC,KAAP,KAAiB,OAArB,EAA8B;IAC5B,MAAMpB,aAAa,GAAG,IAAIE,IAAJ,CAASL,CAAC,CAACwB,GAAF,CAAMH,QAAN,EAAgBC,MAAM,CAACG,IAAvB,IAA+B,IAAxC,EACnBC,WADmB,GAEnBC,MAFmB,CAEZ,EAFY,EAER,CAFQ,CAAtB;IAGA,OAAOzB,WAAW,CAACC,aAAD,CAAlB;EACD;;EACD,OAAOH,CAAC,CAACwB,GAAF,CAAMH,QAAN,EAAgBC,MAAM,CAACG,IAAvB,CAAP;AACD;;AAED,eAAeL,UAAf"},"metadata":{},"sourceType":"module"}