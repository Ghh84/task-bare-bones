{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport compose from './compose';\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","compose","applyMiddleware","_len","middlewares","Array","_key","createStore","reducer","preloadedState","enhancer","store","_dispatch","dispatch","chain","middlewareAPI","getState","action","map","middleware","apply","undefined"],"sources":["C:/Users/gheri/OneDrive/Desktop/Job related/choicely/task-bare-bones/node_modules/redux/es/applyMiddleware.js"],"sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport compose from './compose';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;IAA2B,KAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;MAAE,IAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;QAAEL,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;MAA4B;IAAE;EAAE;;EAAC,OAAOL,MAAP;AAAgB,CAAhQ;;AAEA,OAAOS,OAAP,MAAoB,WAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,eAAT,GAA2B;EACxC,KAAK,IAAIC,IAAI,GAAGT,SAAS,CAACC,MAArB,EAA6BS,WAAW,GAAGC,KAAK,CAACF,IAAD,CAAhD,EAAwDG,IAAI,GAAG,CAApE,EAAuEA,IAAI,GAAGH,IAA9E,EAAoFG,IAAI,EAAxF,EAA4F;IAC1FF,WAAW,CAACE,IAAD,CAAX,GAAoBZ,SAAS,CAACY,IAAD,CAA7B;EACD;;EAED,OAAO,UAAUC,WAAV,EAAuB;IAC5B,OAAO,UAAUC,OAAV,EAAmBC,cAAnB,EAAmCC,QAAnC,EAA6C;MAClD,IAAIC,KAAK,GAAGJ,WAAW,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,CAAvB;MACA,IAAIE,SAAS,GAAGD,KAAK,CAACE,QAAtB;MACA,IAAIC,KAAK,GAAG,EAAZ;MAEA,IAAIC,aAAa,GAAG;QAClBC,QAAQ,EAAEL,KAAK,CAACK,QADE;QAElBH,QAAQ,EAAE,SAASA,QAAT,CAAkBI,MAAlB,EAA0B;UAClC,OAAOL,SAAS,CAACK,MAAD,CAAhB;QACD;MAJiB,CAApB;MAMAH,KAAK,GAAGV,WAAW,CAACc,GAAZ,CAAgB,UAAUC,UAAV,EAAsB;QAC5C,OAAOA,UAAU,CAACJ,aAAD,CAAjB;MACD,CAFO,CAAR;MAGAH,SAAS,GAAGX,OAAO,CAACmB,KAAR,CAAcC,SAAd,EAAyBP,KAAzB,EAAgCH,KAAK,CAACE,QAAtC,CAAZ;MAEA,OAAOxB,QAAQ,CAAC,EAAD,EAAKsB,KAAL,EAAY;QACzBE,QAAQ,EAAED;MADe,CAAZ,CAAf;IAGD,CAnBD;EAoBD,CArBD;AAsBD"},"metadata":{},"sourceType":"module"}